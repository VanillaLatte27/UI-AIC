version: "3.9"

services:
  backend:
    build:
      context: ./AI
    container_name: ui-aic-backend
    ports:
      - "5001:5001"
    environment:
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5001
      - FLASK_DEBUG=false
    volumes:
      - ./logs:/var/log/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - prometheus
      - loki

  frontend:
    build:
      context: ./front-end/ui-aic
      args:
        NEXT_PUBLIC_FLASK_BASE_URL: http://backend:5001
    container_name: ui-aic-frontend
    environment:
      - FLASK_API_URL=http://backend:5001
      - NEXT_PUBLIC_FLASK_BASE_URL=http://backend:5001
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - backend

  # Observability Stack
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: ui-aic-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./ops/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:10.2.2
    container_name: ui-aic-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./ops/grafana/provisioning:/etc/grafana/provisioning
      - ./ops/grafana/dashboards:/etc/grafana/dashboards
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - prometheus

  loki:
    image: grafana/loki:2.9.2
    container_name: ui-aic-loki
    ports:
      - "3100:3100"
    volumes:
      - ./ops/loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  promtail:
    image: grafana/promtail:2.9.2
    container_name: ui-aic-promtail
    volumes:
      - ./logs:/var/log/app:ro
      - ./ops/promtail/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  # MLOps Stack
  minio:
    image: minio/minio:RELEASE.2023-11-15T20-43-25Z
    container_name: ui-aic-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.8.1
    container_name: ui-aic-mlflow
    command: >
      mlflow server 
      --host 0.0.0.0 
      --port 5000
      --backend-store-uri sqlite:///mlflow.db 
      --default-artifact-root s3://mlflow/ 
      --serve-artifacts
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    ports:
      - "5002:5000"
    volumes:
      - mlflow_data:/mlflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - minio

  redis:
    image: redis:7.2-alpine
    container_name: ui-aic-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  label-studio:
    image: heartexlabs/label-studio:1.10.1
    container_name: ui-aic-label-studio
    ports:
      - "8080:8080"
    environment:
      - LABEL_STUDIO_LOCAL_FILES_SERVING_ENABLED=true
      - LABEL_STUDIO_LOCAL_FILES_DOCUMENT_ROOT=/label-studio/data
    volumes:
      - label_studio_data:/label-studio/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: ui-aic-cloudflared
    depends_on:
      - frontend
      - backend
      - grafana
    command: tunnel --no-autoupdate run --token ${TUNNEL_TOKEN}
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    restart: unless-stopped
    profiles:
      - public

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  minio_data:
  mlflow_data:
  redis_data:
  label_studio_data:

networks:
  default:
    driver: bridge
